{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","ava","src","photos","large","userPhoto","alt","Preloader","Post","item","message","like","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postElements","post","map","p","postsBlock","AddPostReduxForm","onSubmit","values","addPost","newPostText","posts","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","updateUserStatus","Component","compose","auth","withRouter","withAuthRedirect"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,+BAA+B,IAAM,2B,oBCA5HD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,wB,oBCAlED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,qB,mJCwCpCC,EAtCY,SAACC,GAAW,IAAD,EAEFC,oBAAS,GAFP,mBAE3BC,EAF2B,KAEjBC,EAFiB,OAINF,mBAASD,EAAMI,QAJT,mBAI3BA,EAJ2B,KAInBC,EAJmB,KAoBlC,OAJAC,qBAAU,WACTD,EAAUL,EAAMI,UACd,CAACJ,EAAMI,SAGN,sCACMF,GACF,8BACI,sBAAMK,cAlBO,WACrBJ,GAAY,IAiBJ,SAAwCH,EAAMI,QAAU,UAG3DF,GACD,8BACI,uBAAOM,SAhBI,SAACC,GACpBJ,EAAUI,EAAEC,cAAcC,QAeeC,WAAW,EAAMC,OApBnC,WACvBV,GAAY,GACZH,EAAMc,aAAaV,IAmBJO,MAAOP,UCdfW,EAdK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASF,EAA0B,EAA1BA,aAAcV,EAAY,EAAZA,OACzC,OAAKY,EAID,8BACI,sBAAKC,UAAWC,IAAEC,iBAAlB,UACI,qBAAKF,UAAWC,IAAEE,IAAKC,IAA6B,MAAxBL,EAAQM,OAAOC,MAAgBP,EAAQM,OAAOC,MAAQC,IAAWC,IAAI,KADrG,kBAGI,cAAC,EAAD,CAAoBrB,OAAQA,EAAQU,aAAcA,SAPnD,cAACY,EAAA,EAAD,K,6CCMAC,EAXF,SAAC3B,GACV,OACI,sBAAKiB,UAAWC,IAAEU,KAAlB,UACI,qBAAKP,IAAI,4FACPrB,EAAM6B,QACR,sBAAKZ,UAAWC,IAAEY,KAAlB,UACI,+BAAM,qBAAKT,IAAI,iDAAiDI,IAAI,OADxE,IACsFzB,EAAM+B,kB,kCCDlGC,EAAcC,YAAiB,IAE/BC,EAAUC,IAAMC,MAAK,SAAApC,GACvB,IAAIqC,EAAerC,EAAMsC,KAAKC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMX,QAASW,EAAEX,QAASE,WAAYS,EAAET,gBAO/E,OACI,sBAAKd,UAAWC,IAAEuB,WAAlB,UACI,0CACA,8BACI,cAACC,EAAD,CAAkBC,SARhB,SAACC,GACX5C,EAAM6C,QAAQD,EAAOE,kBASjB,qBAAK7B,UAAWC,IAAE6B,MAAlB,SACKV,UAiBXK,EAAmBM,YAAW,CAACC,KAAM,eAAlBD,EAXL,SAAChD,GACjB,OACI,uBAAM2C,SAAU3C,EAAMkD,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAM,cAAeC,YAAa,eAC9DC,SAAU,CAACC,IAAUzB,OAEzB,oDAKGE,I,QCpBAwB,EAFUC,aAdD,SAACC,GACrB,MAAM,CACFtB,KAAMsB,EAAMC,YAAYvB,KACxBQ,YAAac,EAAMC,YAAYf,gBAGZ,SAACgB,GACxB,MAAO,CACHjB,QAAS,SAACC,GACNgB,EAASC,YAAqBjB,QAKjBa,CAA6CzB,GCPvD8B,EARC,SAAChE,GACb,OACI,gCACI,cAAC,EAAD,CAAagB,QAAShB,EAAMgB,QAASZ,OAAQJ,EAAMI,OAAQU,aAAcd,EAAMc,eAC/E,cAAC,EAAD,Q,yBCANmD,E,kLAGE,IAAIC,EAASC,KAAKnE,MAAMoE,MAAMC,OAAOH,OAChCA,IACDA,EAASC,KAAKnE,MAAMsE,kBAEnBJ,GACDC,KAAKnE,MAAMuE,QAAQC,KAAK,UAE5BL,KAAKnE,MAAMyE,eAAeP,GAC1BC,KAAKnE,MAAM0E,cAAcR,K,+BAIzB,OACI,cAAC,EAAD,2BAAaC,KAAKnE,OAAlB,IAAyBgB,QAASmD,KAAKnE,MAAMgB,QAASF,aAAcqD,KAAKnE,MAAM2E,wB,GAhB5DxC,IAAMyC,WA0BtBC,sBACXlB,aAPkB,SAACC,GAAD,MAAY,CAC9B5C,QAAS4C,EAAMC,YAAY7C,QAC3BZ,OAAQwD,EAAMC,YAAYzD,OAC1BkE,iBAAkBV,EAAMkB,KAAKZ,UAIJ,CAACO,mBAAgBC,kBAAeC,uBACzDI,IACAC,IAHWH,CAIZZ","file":"static/js/3.ddbfd7cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2UCks\",\"wallpaper\":\"ProfileInfo_wallpaper__2lFoW\",\"ava\":\"ProfileInfo_ava__2tpf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__236xh\",\"post\":\"MyPosts_post__2NRQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Of8q\",\"like\":\"Post_like__3fibP\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect(() => {\r\n     setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusHooks;\r\n\r\n","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/img/user_no_photo.png\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({profile, updateStatus, status}) => {\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.ava} src={profile.photos.large != null ? profile.photos.large : userPhoto} alt=\"\"/>\r\n                ava+description\r\n                <ProfileStatusHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;\r\n\r\n","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n            { props.message }\r\n            <div className={s.like}>\r\n                <span><img src=\"https://pngimg.com/uploads/like/like_PNG67.png\" alt=\"\"/></span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utilits/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = props.post.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    let AddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={AddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Add new post'}\r\n                validate={[required, maxLength10]}/>\r\n            </div>\r\n            <button>add post</button>\r\n        </form>\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm ({form: \"addPostForm\"})(AddPostForm)\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        post: state.profilePage.post,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        if (!userId) {\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n) (ProfileContainer);\r\n\r\n"],"sourceRoot":""}